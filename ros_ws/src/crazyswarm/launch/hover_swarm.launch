<?xml version="1.0"?>
<launch>
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="gaps" default="False"/>
  <arg name="ada" default="False"/>

  <rosparam command="load" file="$(find crazyswarm)/launch/crazyflieTypes.yaml" />
  <rosparam command="load" file="$(find crazyswarm)/launch/crazyflies.yaml" />

  <node pkg="crazyswarm" type="crazyswarm_server" name="crazyswarm_server" output="screen" >
    <param name="gaps" value="$(arg gaps)"/>
    <param name="ada" value="$(arg ada)"/>
    <rosparam>
      # Logging configuration (Use enable_logging to actually enable logging)
      genericLogTopics: ["gaps"]
      genericLogTopicFrequencies: [10]
      genericLogTopic_gaps_Variables: [
        #"gaps6DOF.ix",
        #"gaps6DOF.iy",
        #"gaps6DOF.iz",
        #"gaps6DOF.yabsmax",
        #"gaps6DOF.max_row",
        #"gaps6DOF.max_col",
        "gaps6DOF.ki_xy",
        "gaps6DOF.ki_z",
        "gaps6DOF.kp_xy",
        "gaps6DOF.kp_z",
        "gaps6DOF.kv_xy",
        "gaps6DOF.kv_z",
        "gaps6DOF.kr_xy",
        "gaps6DOF.kr_z",
        "gaps6DOF.kw_xy",
        #"gaps6DOF.kw_z", # TODO: 9-var limit: from firmware, or CSW? if CSW, then should fix.
      ]

      # firmware parameters for all drones (use crazyflieTypes.yaml to set per type, or
      # allCrazyflies.yaml to set per drone)
      firmwareParams:
        commander:
          enHighLevel: 1
        stabilizer:
          estimator: 2 # 1: complementary, 2: kalman
          controller: 2 # 1: PID, 2: mellinger, 5: lee
        ring:
          effect: 16 # 6: double spinner, 7: solid color, 16: packetRate
          solidBlue: 255 # if set to solid color
          solidGreen: 0 # if set to solid color
          solidRed: 0 # if set to solid color
          headlightEnable: 0
        locSrv:
          extPosStdDev: 1e-3
          extQuatStdDev: 0.5e-1
        kalman:
          resetEstimation: 1
        gaps6DOF:
          mass: 0.032

          ki_z: 1.56
          kp_z: 39.5
          kv_z: 12.5

          ki_xy: 1.56
          kp_xy: 12.5
          kv_xy: 6.25

          kr_xy: 830
          kw_xy: 238
          kwd_xy: 4.36

          kr_z: 147
          kw_z: 29.7

          enable: 0
          eta: 1e-2
          damping: 0.9999

          Qp: 1e0
          Qv: 0
          Qw: 0
          Rthrust: 1e-6
          Rtorque: 1e-3
          reg_L2: 1e-6

      # tracking
      motion_capture_type: "vicon" # one of none,vicon,optitrack,optitrack_closed_source,qualisys,vrpn
      object_tracking_type: "libobjecttracker" # one of motionCapture,libobjecttracker
      send_position_only: True # set to False to send position+orientation; set to True to send position only
      motion_capture_host_name: "131.215.96.209"
      # motion_capture_interface_ip: "" # optional for optitrack with multiple interfaces
      save_point_clouds: "/dev/null" # set to a valid path to log mocap point cloud binary file.
      print_latency: False
      write_csvs: True
      force_no_cache: False
      enable_parameters: True
      enable_logging: True
      enable_logging_pose: False
    </rosparam>
  </node>

  <node name="joy" pkg="joy" type="joy_node" output="screen">
    <param name="dev" value="$(arg joy_dev)" />
  </node>

  <node pkg="crazyswarm" type="crazyswarm_teleop" name="crazyswarm_teleop" output="screen">
    <param name="csv_file" value="$(find crazyswarm)/launch/figure8_smooth.csv" />
    <param name="timescale" value="0.8" />
  </node>

  <node name="bagger" pkg="rosbag" type="record" args="record -a -O gaps_$(arg gaps)_$(arg ada)"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find crazyswarm)/launch/test.rviz"/>

  <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot_x"
    args="/cf21/gaps/values[0]:values[1]:values[2]:values[3]:values[4]:values[5]:values[6]:values[7]:values[8]" />
  <!-- <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot_roll" args="/cf1/log1/values[2] /cf1/log1/values[3]"/> -->
  <node name="fan_switch" pkg="crazyswarm" type="fan_switch.py" output="screen">
  </node>

</launch>
